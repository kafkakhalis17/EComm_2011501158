@page "/manajemenproduk/tambah"
@page "/manajemenproduk/edit/{id:int}"
@inject IProdukService ProdukService


@if(Id == null){
    <h3>Tambah Produk</h3>
}
else
{
    <PageTitle> Edit Data @prod.Nama</PageTitle>
    <h3> Edit produk @prod.Nama</h3>
}
<EditForm Model="prod" OnValidSubmit="HandleSubmit">
     <div class="form-group row">
         <label for="Nama"  class="col-sm-2 col-form-label">nama</label>
         <InputText id="Nama" @bind-Value="@prod.Nama" class="form-control"></InputText>
     </div>
    <div class="form-group row">
        <label for="Nama" class="col-sm-2 col-form-label">deskripsi</label>
        <InputText id="Nama" @bind-Value="@prod.Deskripsi" class="form-control"></InputText>
    </div>
    <div class="form-group row">
        <label for="Nama" class="col-sm-2 col-form-label">Harga original</label>
        <InputText id="Nama" @bind-Value="@prod.HargaOrginal" class="form-control"></InputText>
    </div>
    <div class="form-group row">
        <label for="Nama" class="col-sm-2 col-form-label">harga</label>
        <InputText id="Nama" @bind-Value="@prod.Harga" class="form-control"></InputText>
    </div>
    <div class="form-group row">
        <label for="Nama" class="col-sm-2 col-form-label">Gambar</label>
        <InputText id="Nama" @bind-Value="@prod.GambarUrl" class="form-control"></InputText>
    </div>
 
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    Produk prod = new Produk();

    protected override async Task OnParametersSetAsync()
    {
        if(Id != null)
        {
            prod = await ProdukService.GetProduksById((int)Id);
        }

    }
    public void HandleSubmit()
    {
        
    }
}
