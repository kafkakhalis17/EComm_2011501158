// <auto-generated />
using System;
using EComm_2011501158.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EComm_2011501158.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EComm_2011501158.Shared.ItemKereta", b =>
                {
                    b.Property<int>("IdPesanan")
                        .HasColumnType("int");

                    b.Property<int>("IdProduk")
                        .HasColumnType("int");

                    b.Property<int>("IdVarian")
                        .HasColumnType("int");

                    b.Property<decimal>("Harga")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaProduk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaVarian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("IdPesanan", "IdProduk", "IdVarian");

                    b.HasIndex("IdProduk");

                    b.HasIndex("IdVarian");

                    b.ToTable("PesananProduk");
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Kategori", b =>
                {
                    b.Property<int>("IdKategori")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKategori"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKategori");

                    b.ToTable("Kategori");

                    b.HasData(
                        new
                        {
                            IdKategori = 1,
                            Nama = "Horror"
                        },
                        new
                        {
                            IdKategori = 2,
                            Nama = "Drama"
                        },
                        new
                        {
                            IdKategori = 3,
                            Nama = "fantasi"
                        });
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Pengguna", b =>
                {
                    b.Property<int>("IdPengguna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPengguna"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("AlamatPengguna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailPengguna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPengguna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KonfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPengguna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeleponPengguna")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("TglLahir")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPengguna");

                    b.ToTable("Pengguna");

                    b.HasData(
                        new
                        {
                            IdPengguna = 1,
                            Admin = true,
                            AlamatPengguna = "Jl. Budiyanto No.2 Jakarta",
                            EmailPengguna = "Khaliskafka@mail.com",
                            FotoPengguna = "https://i.pinimg.com/564x/b6/24/7a/b6247a4b03bc5a296ac7f694b6b72863.jpg",
                            KonfirmPassword = "",
                            NamaPengguna = "kafka khalis",
                            Password = "admin123",
                            TeleponPengguna = "08193818311",
                            TglLahir = new DateTime(2015, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "kafka17"
                        });
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Pesanan", b =>
                {
                    b.Property<int>("IdPesanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPesanan"));

                    b.Property<DateTime>("TglPesanan")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPesanan");

                    b.ToTable("Pesanan");
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Produk", b =>
                {
                    b.Property<int>("IdProduk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduk"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GambarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Harga")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HargaOrginal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdKategori")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProduk");

                    b.HasIndex("IdKategori");

                    b.ToTable("Produk");

                    b.HasData(
                        new
                        {
                            IdProduk = 1,
                            DateCreated = new DateTime(2023, 6, 30, 17, 57, 17, 48, DateTimeKind.Local).AddTicks(1969),
                            DateUpdated = new DateTime(2023, 6, 30, 17, 57, 17, 48, DateTimeKind.Local).AddTicks(1970),
                            Deskripsi = "Misteri Tujuh Lonceng adalah sebuah novel yang bercerita tentang pembunuhan seorang pegawai Departemen Luar Negeri Inggris di sebuah pemondokan, yaitu Pemondokan Chimney. Setelah itu terjadi juga pembunuhan terhadap seorang pria yang tidak lain adalah teman orang yang terbunuh di pemondokan Chimney.",
                            GambarUrl = "https://upload.wikimedia.org/wikipedia/id/4/4c/The_Seven_Dials_Mystery_First_Edition_Cover_1929.jpg",
                            Harga = 99.999m,
                            HargaOrginal = 100.000m,
                            IdKategori = 1,
                            IsDeleted = false,
                            IsPublic = true,
                            Nama = "Misteri Tujuh Lonceng"
                        },
                        new
                        {
                            IdProduk = 2,
                            DateCreated = new DateTime(2023, 6, 30, 17, 57, 17, 48, DateTimeKind.Local).AddTicks(1973),
                            DateUpdated = new DateTime(2023, 6, 30, 17, 57, 17, 48, DateTimeKind.Local).AddTicks(1974),
                            Deskripsi = "The Witcher adalah rangkaian enam novel fantasi dan 15 cerita pendek  yang ditulis oleh penulis Polandia Andrzej SapkowskiSerial ini berputar di sekitar \"penyihir\" eponymous, Geralt of Rivia ",
                            GambarUrl = "https://upload.wikimedia.org/wikipedia/en/8/84/Season_of_Storms_Orion.jpg",
                            Harga = 70.000m,
                            HargaOrginal = 12.0000m,
                            IdKategori = 2,
                            IsDeleted = false,
                            IsPublic = true,
                            Nama = "Season of Storms"
                        },
                        new
                        {
                            IdProduk = 3,
                            DateCreated = new DateTime(2023, 6, 30, 17, 57, 17, 48, DateTimeKind.Local).AddTicks(1977),
                            DateUpdated = new DateTime(2023, 6, 30, 17, 57, 17, 48, DateTimeKind.Local).AddTicks(1977),
                            Deskripsi = "The Lord of the Rings adalah sebuah novel epik   fantasi tinggi [a] oleh penulis dan sarjana Inggris J. R. R. Tolkien. Bertempat di Middle-earth, ceritanya dimulai sebagai sekuel dari buku anak-anak Tolkien tahun 1937 The Hobbit, tetapi akhirnya berkembang menjadi karya yang jauh lebih besar. ",
                            GambarUrl = "https://upload.wikimedia.org/wikipedia/en/thumb/e/e9/First_Single_Volume_Edition_of_The_Lord_of_the_Rings.gif/220px-First_Single_Volume_Edition_of_The_Lord_of_the_Rings.gif",
                            Harga = 70.000m,
                            HargaOrginal = 120.000m,
                            IdKategori = 2,
                            IsDeleted = false,
                            IsPublic = true,
                            Nama = "Lord of the rings"
                        });
                });

            modelBuilder.Entity("EComm_2011501158.Shared.ProdukVarian", b =>
                {
                    b.Property<int>("IdProduk")
                        .HasColumnType("int");

                    b.Property<int>("IdVarian")
                        .HasColumnType("int");

                    b.Property<decimal>("HargaOriVarian")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HargaVarian")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProduk", "IdVarian");

                    b.HasIndex("IdVarian");

                    b.ToTable("ProdukVarian");

                    b.HasData(
                        new
                        {
                            IdProduk = 1,
                            IdVarian = 1,
                            HargaOriVarian = 130.000m,
                            HargaVarian = 120.000m
                        },
                        new
                        {
                            IdProduk = 1,
                            IdVarian = 2,
                            HargaOriVarian = 100.000m,
                            HargaVarian = 60.000m
                        },
                        new
                        {
                            IdProduk = 1,
                            IdVarian = 3,
                            HargaOriVarian = 240.000m,
                            HargaVarian = 185.000m
                        },
                        new
                        {
                            IdProduk = 2,
                            IdVarian = 1,
                            HargaOriVarian = 120.000m,
                            HargaVarian = 100.000m
                        },
                        new
                        {
                            IdProduk = 2,
                            IdVarian = 2,
                            HargaOriVarian = 100.000m,
                            HargaVarian = 75.000m
                        },
                        new
                        {
                            IdProduk = 2,
                            IdVarian = 4,
                            HargaOriVarian = 360.000m,
                            HargaVarian = 320.000m
                        },
                        new
                        {
                            IdProduk = 3,
                            IdVarian = 1,
                            HargaOriVarian = 360.000m,
                            HargaVarian = 300.000m
                        },
                        new
                        {
                            IdProduk = 3,
                            IdVarian = 3,
                            HargaOriVarian = 600.000m,
                            HargaVarian = 520.000m
                        });
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Varian", b =>
                {
                    b.Property<int>("IdVarian")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVarian"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVarian");

                    b.ToTable("Varian");

                    b.HasData(
                        new
                        {
                            IdVarian = 1,
                            Nama = "Fisik"
                        },
                        new
                        {
                            IdVarian = 2,
                            Nama = "Digital"
                        },
                        new
                        {
                            IdVarian = 3,
                            Nama = "Special Edition"
                        },
                        new
                        {
                            IdVarian = 4,
                            Nama = "Special Edition + Author sign"
                        });
                });

            modelBuilder.Entity("EComm_2011501158.Shared.ItemKereta", b =>
                {
                    b.HasOne("EComm_2011501158.Shared.Pesanan", "Pesanan")
                        .WithMany("PesaananProduk")
                        .HasForeignKey("IdPesanan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EComm_2011501158.Shared.Produk", "Produk")
                        .WithMany()
                        .HasForeignKey("IdProduk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EComm_2011501158.Shared.Varian", "Varian")
                        .WithMany()
                        .HasForeignKey("IdVarian")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pesanan");

                    b.Navigation("Produk");

                    b.Navigation("Varian");
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Produk", b =>
                {
                    b.HasOne("EComm_2011501158.Shared.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("IdKategori")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("EComm_2011501158.Shared.ProdukVarian", b =>
                {
                    b.HasOne("EComm_2011501158.Shared.Produk", "Produk")
                        .WithMany("ProdukVarians")
                        .HasForeignKey("IdProduk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EComm_2011501158.Shared.Varian", "Varian")
                        .WithMany()
                        .HasForeignKey("IdVarian")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produk");

                    b.Navigation("Varian");
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Pesanan", b =>
                {
                    b.Navigation("PesaananProduk");
                });

            modelBuilder.Entity("EComm_2011501158.Shared.Produk", b =>
                {
                    b.Navigation("ProdukVarians");
                });
#pragma warning restore 612, 618
        }
    }
}
